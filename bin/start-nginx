#!/usr/bin/env bash

psmgr=/tmp/nginx-buildpack-wait
rm -f $psmgr
mkfifo $psmgr

#Evaluate config to get $PORT
erb nginx.conf.erb > nginx_config/nginx.conf

#Start log redirection.
(
    #Cleanup nginx cache
    rm -rf /tmp/nginx_cache_path
    rm -rf /tmp/nginx_temp_path
    rm -rf /tmp/ngx_pagespeed_cache
    #Initialize log directory.
    touch logs/nginx/access.log logs/nginx/error.log
    #Redirect NGINX logs to stdout.
    echo 'buildpack=nginx at=logs-initialized'
    tail -qF -n 0 logs/nginx/*.log
    echo 'logs' > $psmgr
) &

#Start NGINX
(
    #We expect nginx to run in foreground.
    #We also expect a socket to be at /tmp/nginx.socket.
    echo 'buildpack=nginx at=nginx-start'
    bin/nginx -p . -c nginx_config/nginx.conf
    echo 'nginx' > $psmgr
)

#This read will block the process waiting on a msg to be put into the fifo.
#If any of the processes defined above should exit,
#a msg will be put into the fifo causing the read operation
#to un-block. The process putting the msg into the fifo
#will use it's process name as a msg so that we can print the offending
#process to stdout.
read exit_process <$psmgr
echo "buildpack=nginx at=exit process=$exit_process"
exit 1
